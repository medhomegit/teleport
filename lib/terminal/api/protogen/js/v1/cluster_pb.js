// source: v1/cluster.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.teleport.terminal.v1.AuthSettingsSSO', null, global);
goog.exportSymbol('proto.teleport.terminal.v1.AuthSettingsU2F', null, global);
goog.exportSymbol('proto.teleport.terminal.v1.Cluster', null, global);
goog.exportSymbol('proto.teleport.terminal.v1.ClusterACL', null, global);
goog.exportSymbol('proto.teleport.terminal.v1.ClusterAuthSettings', null, global);
goog.exportSymbol('proto.teleport.terminal.v1.ResourceAccess', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.terminal.v1.Cluster = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.terminal.v1.Cluster, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.terminal.v1.Cluster.displayName = 'proto.teleport.terminal.v1.Cluster';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.terminal.v1.ResourceAccess = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.terminal.v1.ResourceAccess, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.terminal.v1.ResourceAccess.displayName = 'proto.teleport.terminal.v1.ResourceAccess';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.terminal.v1.ClusterACL = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.teleport.terminal.v1.ClusterACL.repeatedFields_, null);
};
goog.inherits(proto.teleport.terminal.v1.ClusterACL, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.terminal.v1.ClusterACL.displayName = 'proto.teleport.terminal.v1.ClusterACL';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.terminal.v1.ClusterAuthSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.terminal.v1.ClusterAuthSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.terminal.v1.ClusterAuthSettings.displayName = 'proto.teleport.terminal.v1.ClusterAuthSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.terminal.v1.AuthSettingsSSO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.terminal.v1.AuthSettingsSSO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.terminal.v1.AuthSettingsSSO.displayName = 'proto.teleport.terminal.v1.AuthSettingsSSO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.terminal.v1.AuthSettingsU2F = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.terminal.v1.AuthSettingsU2F, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.terminal.v1.AuthSettingsU2F.displayName = 'proto.teleport.terminal.v1.AuthSettingsU2F';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.terminal.v1.Cluster.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.terminal.v1.Cluster.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.terminal.v1.Cluster} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.Cluster.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    connected: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    acl: (f = msg.getAcl()) && proto.teleport.terminal.v1.ClusterACL.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.terminal.v1.Cluster}
 */
proto.teleport.terminal.v1.Cluster.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.terminal.v1.Cluster;
  return proto.teleport.terminal.v1.Cluster.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.terminal.v1.Cluster} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.terminal.v1.Cluster}
 */
proto.teleport.terminal.v1.Cluster.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConnected(value);
      break;
    case 3:
      var value = new proto.teleport.terminal.v1.ClusterACL;
      reader.readMessage(value,proto.teleport.terminal.v1.ClusterACL.deserializeBinaryFromReader);
      msg.setAcl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.terminal.v1.Cluster.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.terminal.v1.Cluster.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.terminal.v1.Cluster} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.Cluster.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnected();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getAcl();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.teleport.terminal.v1.ClusterACL.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Name = 1;
 * @return {string}
 */
proto.teleport.terminal.v1.Cluster.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.terminal.v1.Cluster} returns this
 */
proto.teleport.terminal.v1.Cluster.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool Connected = 2;
 * @return {boolean}
 */
proto.teleport.terminal.v1.Cluster.prototype.getConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.teleport.terminal.v1.Cluster} returns this
 */
proto.teleport.terminal.v1.Cluster.prototype.setConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional ClusterACL ACL = 3;
 * @return {?proto.teleport.terminal.v1.ClusterACL}
 */
proto.teleport.terminal.v1.Cluster.prototype.getAcl = function() {
  return /** @type{?proto.teleport.terminal.v1.ClusterACL} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ClusterACL, 3));
};


/**
 * @param {?proto.teleport.terminal.v1.ClusterACL|undefined} value
 * @return {!proto.teleport.terminal.v1.Cluster} returns this
*/
proto.teleport.terminal.v1.Cluster.prototype.setAcl = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.Cluster} returns this
 */
proto.teleport.terminal.v1.Cluster.prototype.clearAcl = function() {
  return this.setAcl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.Cluster.prototype.hasAcl = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.terminal.v1.ResourceAccess.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.terminal.v1.ResourceAccess} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ResourceAccess.toObject = function(includeInstance, msg) {
  var f, obj = {
    list: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    read: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    edit: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    create: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    pb_delete: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ResourceAccess.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.terminal.v1.ResourceAccess;
  return proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.terminal.v1.ResourceAccess} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setList(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRead(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEdit(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreate(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.terminal.v1.ResourceAccess} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getList();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRead();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getEdit();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getCreate();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDelete();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional bool List = 1;
 * @return {boolean}
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.getList = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.teleport.terminal.v1.ResourceAccess} returns this
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.setList = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool Read = 2;
 * @return {boolean}
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.getRead = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.teleport.terminal.v1.ResourceAccess} returns this
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.setRead = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool Edit = 3;
 * @return {boolean}
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.getEdit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.teleport.terminal.v1.ResourceAccess} returns this
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.setEdit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool Create = 4;
 * @return {boolean}
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.getCreate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.teleport.terminal.v1.ResourceAccess} returns this
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.setCreate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool Delete = 5;
 * @return {boolean}
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.getDelete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.teleport.terminal.v1.ResourceAccess} returns this
 */
proto.teleport.terminal.v1.ResourceAccess.prototype.setDelete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.teleport.terminal.v1.ClusterACL.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.terminal.v1.ClusterACL.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.terminal.v1.ClusterACL} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ClusterACL.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessions: (f = msg.getSessions()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f),
    authconnectors: (f = msg.getAuthconnectors()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f),
    roles: (f = msg.getRoles()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f),
    users: (f = msg.getUsers()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f),
    trustedclusters: (f = msg.getTrustedclusters()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f),
    events: (f = msg.getEvents()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f),
    tokens: (f = msg.getTokens()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f),
    servers: (f = msg.getServers()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f),
    appservers: (f = msg.getAppservers()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f),
    dbservers: (f = msg.getDbservers()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f),
    kubeservers: (f = msg.getKubeservers()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f),
    sshloginsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    accessrequests: (f = msg.getAccessrequests()) && proto.teleport.terminal.v1.ResourceAccess.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.terminal.v1.ClusterACL}
 */
proto.teleport.terminal.v1.ClusterACL.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.terminal.v1.ClusterACL;
  return proto.teleport.terminal.v1.ClusterACL.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.terminal.v1.ClusterACL} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.terminal.v1.ClusterACL}
 */
proto.teleport.terminal.v1.ClusterACL.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setSessions(value);
      break;
    case 2:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setAuthconnectors(value);
      break;
    case 3:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setRoles(value);
      break;
    case 4:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setUsers(value);
      break;
    case 5:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setTrustedclusters(value);
      break;
    case 6:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setEvents(value);
      break;
    case 7:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setTokens(value);
      break;
    case 8:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setServers(value);
      break;
    case 9:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setAppservers(value);
      break;
    case 10:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setDbservers(value);
      break;
    case 11:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setKubeservers(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addSshlogins(value);
      break;
    case 13:
      var value = new proto.teleport.terminal.v1.ResourceAccess;
      reader.readMessage(value,proto.teleport.terminal.v1.ResourceAccess.deserializeBinaryFromReader);
      msg.setAccessrequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.terminal.v1.ClusterACL.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.terminal.v1.ClusterACL} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ClusterACL.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
  f = message.getAuthconnectors();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
  f = message.getRoles();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
  f = message.getUsers();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
  f = message.getTrustedclusters();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
  f = message.getEvents();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
  f = message.getTokens();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
  f = message.getServers();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
  f = message.getAppservers();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
  f = message.getDbservers();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
  f = message.getKubeservers();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
  f = message.getSshloginsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getAccessrequests();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.teleport.terminal.v1.ResourceAccess.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceAccess Sessions = 1;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getSessions = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 1));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setSessions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearSessions = function() {
  return this.setSessions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasSessions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResourceAccess AuthConnectors = 2;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getAuthconnectors = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 2));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setAuthconnectors = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearAuthconnectors = function() {
  return this.setAuthconnectors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasAuthconnectors = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResourceAccess Roles = 3;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getRoles = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 3));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setRoles = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearRoles = function() {
  return this.setRoles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasRoles = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ResourceAccess Users = 4;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getUsers = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 4));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setUsers = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearUsers = function() {
  return this.setUsers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasUsers = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ResourceAccess TrustedClusters = 5;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getTrustedclusters = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 5));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setTrustedclusters = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearTrustedclusters = function() {
  return this.setTrustedclusters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasTrustedclusters = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ResourceAccess Events = 6;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getEvents = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 6));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setEvents = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearEvents = function() {
  return this.setEvents(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasEvents = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ResourceAccess Tokens = 7;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getTokens = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 7));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setTokens = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearTokens = function() {
  return this.setTokens(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasTokens = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ResourceAccess Servers = 8;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getServers = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 8));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setServers = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearServers = function() {
  return this.setServers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasServers = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ResourceAccess AppServers = 9;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getAppservers = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 9));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setAppservers = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearAppservers = function() {
  return this.setAppservers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasAppservers = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ResourceAccess DBServers = 10;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getDbservers = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 10));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setDbservers = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearDbservers = function() {
  return this.setDbservers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasDbservers = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ResourceAccess KubeServers = 11;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getKubeservers = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 11));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setKubeservers = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearKubeservers = function() {
  return this.setKubeservers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasKubeservers = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated string SSHLogins = 12;
 * @return {!Array<string>}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getSshloginsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.setSshloginsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.addSshlogins = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearSshloginsList = function() {
  return this.setSshloginsList([]);
};


/**
 * optional ResourceAccess AccessRequests = 13;
 * @return {?proto.teleport.terminal.v1.ResourceAccess}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.getAccessrequests = function() {
  return /** @type{?proto.teleport.terminal.v1.ResourceAccess} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.ResourceAccess, 13));
};


/**
 * @param {?proto.teleport.terminal.v1.ResourceAccess|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
*/
proto.teleport.terminal.v1.ClusterACL.prototype.setAccessrequests = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterACL} returns this
 */
proto.teleport.terminal.v1.ClusterACL.prototype.clearAccessrequests = function() {
  return this.setAccessrequests(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterACL.prototype.hasAccessrequests = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.terminal.v1.ClusterAuthSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.terminal.v1.ClusterAuthSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ClusterAuthSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secondfactor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    u2fs: (f = msg.getU2fs()) && proto.teleport.terminal.v1.AuthSettingsU2F.toObject(includeInstance, f),
    oidc: (f = msg.getOidc()) && proto.teleport.terminal.v1.AuthSettingsSSO.toObject(includeInstance, f),
    saml: (f = msg.getSaml()) && proto.teleport.terminal.v1.AuthSettingsSSO.toObject(includeInstance, f),
    github: (f = msg.getGithub()) && proto.teleport.terminal.v1.AuthSettingsSSO.toObject(includeInstance, f),
    hasmessageoftheday: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.terminal.v1.ClusterAuthSettings;
  return proto.teleport.terminal.v1.ClusterAuthSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.terminal.v1.ClusterAuthSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecondfactor(value);
      break;
    case 3:
      var value = new proto.teleport.terminal.v1.AuthSettingsU2F;
      reader.readMessage(value,proto.teleport.terminal.v1.AuthSettingsU2F.deserializeBinaryFromReader);
      msg.setU2fs(value);
      break;
    case 4:
      var value = new proto.teleport.terminal.v1.AuthSettingsSSO;
      reader.readMessage(value,proto.teleport.terminal.v1.AuthSettingsSSO.deserializeBinaryFromReader);
      msg.setOidc(value);
      break;
    case 5:
      var value = new proto.teleport.terminal.v1.AuthSettingsSSO;
      reader.readMessage(value,proto.teleport.terminal.v1.AuthSettingsSSO.deserializeBinaryFromReader);
      msg.setSaml(value);
      break;
    case 6:
      var value = new proto.teleport.terminal.v1.AuthSettingsSSO;
      reader.readMessage(value,proto.teleport.terminal.v1.AuthSettingsSSO.deserializeBinaryFromReader);
      msg.setGithub(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasmessageoftheday(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.terminal.v1.ClusterAuthSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.terminal.v1.ClusterAuthSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ClusterAuthSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecondfactor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getU2fs();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.teleport.terminal.v1.AuthSettingsU2F.serializeBinaryToWriter
    );
  }
  f = message.getOidc();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.teleport.terminal.v1.AuthSettingsSSO.serializeBinaryToWriter
    );
  }
  f = message.getSaml();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.teleport.terminal.v1.AuthSettingsSSO.serializeBinaryToWriter
    );
  }
  f = message.getGithub();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.teleport.terminal.v1.AuthSettingsSSO.serializeBinaryToWriter
    );
  }
  f = message.getHasmessageoftheday();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string Type = 1;
 * @return {string}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings} returns this
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string SecondFactor = 2;
 * @return {string}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.getSecondfactor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings} returns this
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.setSecondfactor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional AuthSettingsU2F U2Fs = 3;
 * @return {?proto.teleport.terminal.v1.AuthSettingsU2F}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.getU2fs = function() {
  return /** @type{?proto.teleport.terminal.v1.AuthSettingsU2F} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.AuthSettingsU2F, 3));
};


/**
 * @param {?proto.teleport.terminal.v1.AuthSettingsU2F|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings} returns this
*/
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.setU2fs = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings} returns this
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.clearU2fs = function() {
  return this.setU2fs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.hasU2fs = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AuthSettingsSSO OIDC = 4;
 * @return {?proto.teleport.terminal.v1.AuthSettingsSSO}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.getOidc = function() {
  return /** @type{?proto.teleport.terminal.v1.AuthSettingsSSO} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.AuthSettingsSSO, 4));
};


/**
 * @param {?proto.teleport.terminal.v1.AuthSettingsSSO|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings} returns this
*/
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.setOidc = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings} returns this
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.clearOidc = function() {
  return this.setOidc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.hasOidc = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional AuthSettingsSSO SAML = 5;
 * @return {?proto.teleport.terminal.v1.AuthSettingsSSO}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.getSaml = function() {
  return /** @type{?proto.teleport.terminal.v1.AuthSettingsSSO} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.AuthSettingsSSO, 5));
};


/**
 * @param {?proto.teleport.terminal.v1.AuthSettingsSSO|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings} returns this
*/
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.setSaml = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings} returns this
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.clearSaml = function() {
  return this.setSaml(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.hasSaml = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional AuthSettingsSSO Github = 6;
 * @return {?proto.teleport.terminal.v1.AuthSettingsSSO}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.getGithub = function() {
  return /** @type{?proto.teleport.terminal.v1.AuthSettingsSSO} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.AuthSettingsSSO, 6));
};


/**
 * @param {?proto.teleport.terminal.v1.AuthSettingsSSO|undefined} value
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings} returns this
*/
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.setGithub = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings} returns this
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.clearGithub = function() {
  return this.setGithub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.hasGithub = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool HasMessageOfTheDay = 7;
 * @return {boolean}
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.getHasmessageoftheday = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.teleport.terminal.v1.ClusterAuthSettings} returns this
 */
proto.teleport.terminal.v1.ClusterAuthSettings.prototype.setHasmessageoftheday = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.terminal.v1.AuthSettingsSSO.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.terminal.v1.AuthSettingsSSO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.terminal.v1.AuthSettingsSSO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.AuthSettingsSSO.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    display: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.terminal.v1.AuthSettingsSSO}
 */
proto.teleport.terminal.v1.AuthSettingsSSO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.terminal.v1.AuthSettingsSSO;
  return proto.teleport.terminal.v1.AuthSettingsSSO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.terminal.v1.AuthSettingsSSO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.terminal.v1.AuthSettingsSSO}
 */
proto.teleport.terminal.v1.AuthSettingsSSO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.terminal.v1.AuthSettingsSSO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.terminal.v1.AuthSettingsSSO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.terminal.v1.AuthSettingsSSO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.AuthSettingsSSO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplay();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Name = 1;
 * @return {string}
 */
proto.teleport.terminal.v1.AuthSettingsSSO.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.terminal.v1.AuthSettingsSSO} returns this
 */
proto.teleport.terminal.v1.AuthSettingsSSO.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Display = 2;
 * @return {string}
 */
proto.teleport.terminal.v1.AuthSettingsSSO.prototype.getDisplay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.terminal.v1.AuthSettingsSSO} returns this
 */
proto.teleport.terminal.v1.AuthSettingsSSO.prototype.setDisplay = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.terminal.v1.AuthSettingsU2F.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.terminal.v1.AuthSettingsU2F.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.terminal.v1.AuthSettingsU2F} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.AuthSettingsU2F.toObject = function(includeInstance, msg) {
  var f, obj = {
    appid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.terminal.v1.AuthSettingsU2F}
 */
proto.teleport.terminal.v1.AuthSettingsU2F.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.terminal.v1.AuthSettingsU2F;
  return proto.teleport.terminal.v1.AuthSettingsU2F.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.terminal.v1.AuthSettingsU2F} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.terminal.v1.AuthSettingsU2F}
 */
proto.teleport.terminal.v1.AuthSettingsU2F.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.terminal.v1.AuthSettingsU2F.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.terminal.v1.AuthSettingsU2F.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.terminal.v1.AuthSettingsU2F} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.AuthSettingsU2F.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string AppID = 1;
 * @return {string}
 */
proto.teleport.terminal.v1.AuthSettingsU2F.prototype.getAppid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.terminal.v1.AuthSettingsU2F} returns this
 */
proto.teleport.terminal.v1.AuthSettingsU2F.prototype.setAppid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.teleport.terminal.v1);
